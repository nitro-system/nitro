# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# cspell:ignore buildx getsentry sourcemaps gonuit

name: Deploy production

on:
  push:
    branches: [master]

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      # Get checkout
      - name: Checkout
        uses: actions/checkout@v3

      # Install Node js
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.10.0'

      # Install Dependencies
      - name: Install dependencies ðŸ”§
        run: |
          npm i -g npm@latest
          npm ci

      # Build application
      - name: Run Build
        run: npm run build -- --source-map

      # Get Package.json Version
      - name: Get Package.json Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main # cspell:ignore martinbeentjes

      # Create Sentry Release For Web Admin
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: nitro-system
          SENTRY_PROJECT: web-admin
        with:
          environment: production
          sourcemaps: ./dist/apps/w-admin
          version: ${{ steps.package-version.outputs.current-version }}
          ignore_empty: true

      # Create Sentry Release For Mobile Admin
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: nitro-system
          SENTRY_PROJECT: mobile-admin
        with:
          environment: production
          sourcemaps: ./dist/apps/m-admin
          version: ${{ steps.package-version.outputs.current-version }}
          ignore_empty: true

      # Create Sentry Release For Backend Api
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: nitro-system
          SENTRY_PROJECT: backend-api
        with:
          environment: production
          sourcemaps: ./dist/apps/b-api
          version: ${{ steps.package-version.outputs.current-version }}
          ignore_empty: true

      # Get checkout
      - name: Checkout
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and push Build
      - name: Build and push Build
        uses: docker/build-push-action@v3
        with:
          tags: nitrosystem/production_build:latest
          target: dist
          build-args: |
            stage=production

      # Build and push Backend Api
      - name: Build and push Backend Api
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: nitrosystem/production_b_api:latest
          target: backend
          build-args: |
            app=b-api
            stage=production

      # Build and push Admin Web
      - name: Build and push Admin Web
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: nitrosystem/production_w_admin:latest
          target: frontend
          build-args: |
            app=w-admin
            stage=production

      # Build and push Admin Mobile
      - name: Build and push Admin Mobile
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: nitrosystem/production_m_admin:latest
          target: frontend
          build-args: |
            app=m-admin
            stage=production
